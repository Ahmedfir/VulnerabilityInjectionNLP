import os
import subprocess
import re

from confuzzion import compile_and_run_mutant


def run_obfuscator_over_all_java_files(root_folder_path, dest_folder):
    reserved_name_file_path = "C:\\Users\\benjamin.petit\\Documents\\Obfuscator_semantic_design\\DMS\\Domains\\Java\\Java1_6\\Tools\\PrettyPrinter\\J2SDKReservedNames.txt"
    command_DMSFormat_path = "C://Users/benjamin.petit/Documents/Obfuscator_semantic_design/DMS/Executables/DMSFormat"
    os.chdir(root_folder_path)
    for root, dirs, files in os.walk("."):
        for file in files:
            if file.endswith(".java"):
                print(file)
                source_file = os.path.join(root, file)
                dest_file = os.path.join(dest_folder, file)
                if (os.path.exists(os.path.join(dest_folder, file))):
                    print("This file has already been obfuscated")
                else:
                    command = f"{command_DMSFormat_path} Java~Java1_6 " \
                              f"{source_file} " \
                              f"{dest_file} " \
                              "+Obfuscate " \
                              f"/r={reserved_name_file_path}"
                    result_command = subprocess.check_output(command, shell=True)
                    for x in result_command.decode('ascii').split('\n'):
                        print(x)


def remove_ascii_space_char(folder_java_files_path):
    os.chdir(folder_java_files_path)

    # for root, dirs, files in os.walk("."):
    # for file in files:
    for file in os.listdir():
        if file.endswith(".java"):
            with open(file, 'r') as file_to_modify:
                filedata = file_to_modify.read()
            filedata = filedata.replace("\\040", " ")
            filedata = filedata.replace("\\045", "%")
            filedata = filedata.replace("\\046", "&")
            filedata = filedata.replace("\\047", "'")
            filedata = filedata.replace("\\054", ",")
            filedata = filedata.replace("\\055", "-")
            filedata = filedata.replace("\\056", ".")
            filedata = filedata.replace("\\057", "/")
            filedata = filedata.replace("\\072", ":")
            filedata = filedata.replace("\\075", "=")
            filedata = filedata.replace("\\134", "\\")
            # Problem with the file name C:\data that must be C:\\data
            filedata = filedata.replace(":\\d", ":\\\\d")
            filedata = filedata.replace(":\\\\144", ":\\\\d")
            # Problem with "UTF-8"
            filedata = filedata.replace("\\125", "U")
            filedata = filedata.replace("\\124", "T")
            filedata = filedata.replace("\\106", "F")
            filedata = filedata.replace("\\070", "8")

            with open(file, 'w') as file_to_modify:
                file_to_modify.write(filedata)


def replace_octal_ascii_code_to_string(octal_based_word):
    return (chr(int(octal_based_word, 8)))


# Utiliy class
def compare_token_counts(normal_dataset_path, obfuscated_dataset_path):
    list_of_bads_normal = []
    list_of_bads_obfusc = []
    with open(normal_dataset_path, 'r') as file:
        for line in file:
            list_of_bads_normal.append(int(line))
    with open(obfuscated_dataset_path, 'r') as file:
        for line in file:
            list_of_bads_obfusc.append(int(line))

    for i, _ in enumerate(list_of_bads_normal):
        if list_of_bads_normal[i] != list_of_bads_obfusc[i]:
            print(f'ligne {i} : {list_of_bads_normal[i]} vs {list_of_bads_obfusc[i]}')


if __name__ == "__main__":
    root_folder_path = "C:\\Users\\benjamin.petit\\Documents\\Juliet_Test_Suite_5CWE_req_only_InferOK"
    dest_folder = "C:\\Users\\benjamin.petit\\Documents\\Juliet_Test_Suite_5CWE_req_only_InferOK_OBFUSCATED"
    # run_obfuscator_over_all_java_files(root_folder_path,dest_folder)
    remove_ascii_space_char(dest_folder)

    # remove package line
    # set the real class name
    os.chdir(dest_folder)
    for file in os.listdir():
        if file.endswith(".java"):
            compile_and_run_mutant.modify_line_in_java_file(file, "package", "")
            compile_and_run_mutant.modify_main_class_according_to_name_of_file(file)

    """
    normal_dataset_nb_token_bad_file_path = "C:\\Users\\benjamin.petit\\docker\\test_main_python\\4_Splitted_tokens_and_unique_txt_file\\nb_tokens_bads.txt"
    obfusc_dataset_nb_token_bad_file_path = "C:\\Users\\benjamin.petit\\docker\\test_main_python_5CWE_req_meth_B2G_obfuscated\\4_Splitted_tokens_and_unique_txt_file\\nb_tokens_bads.txt"
    compare_token_counts(normal_dataset_nb_token_bad_file_path,obfusc_dataset_nb_token_bad_file_path)
    """
