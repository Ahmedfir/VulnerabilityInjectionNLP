import os
import sys
import re
import subprocess
import oracle

def compile_all_java_file(path_to_java, CWE, s_number):
    command = f"javac -cp {path_to_java}/lib/servlet-api.jar;" \
              f"{path_to_java}/lib/commons-lang-2.5.jar;" \
              f"{path_to_java}/lib/commons-codec-1.5.jar;" \
              f"{path_to_java}/lib/javamail-1.4.4.jar " \
              f"{path_to_java}/src/testcasesupport/*.java " \
              f"{path_to_java}/src/testcases/{CWE}/{s_number}/*.java"
    print("Compile")
    os.system(command)

def compile_all_java_file(path_to_java, all_in_the_same_time=True):
    if all_in_the_same_time:
        command = f"javac -cp {path_to_java}/lib/servlet-api.jar;" \
                  f"{path_to_java}/lib/commons-lang-2.5.jar;" \
                  f"{path_to_java}/lib/commons-codec-1.5.jar;" \
                  f"{path_to_java}/lib/javamail-1.4.4.jar " \
                  f"{path_to_java}/src/testcasesupport/*.java " \
                  f"{path_to_java}/src/testcases/*.java"
        print("Compile")
        os.system(command)

    else:
        os.chdir(f"{path_to_java}/src/testcases/")
        for file in [file for file in os.listdir() if file.endswith(".java")]:
            print(file)

            command = f"javac -cp {path_to_java}/lib/servlet-api.jar;" \
                      f"{path_to_java}/lib/commons-lang-2.5.jar;" \
                      f"{path_to_java}/lib/commons-codec-1.5.jar;" \
                      f"{path_to_java}/lib/javamail-1.4.4.jar " \
                      f"{path_to_java}/src/testcasesupport/*.java " \
                      f"{path_to_java}/src/testcases/{file}"
            print("Compile")
            os.system(command)

def compile_all_my_java_files(path_to_src):
    os.chdir(path_to_src)
    for file in [file for file in os.listdir() if file.endswith(".java")]:
        print(file)
        command = f"javac {file}"
        os.system(command)

def run_all_class_file(path_to_java, CWE, s_number):
    print("Execution of the compiled files")
    for file in os.listdir(f"{path_to_java}/src/testcases/{CWE}/{s_number}"):
        if file.endswith(".class"):
            class_to_run = f"testcases.{CWE}.{s_number}.{file[:-6]}"
            print(file)
            print(class_to_run)
            os.chdir(f"{path_to_java}/src")
            command = f"java -cp {path_to_java}/lib/servlet-api.jar;" \
                      f"{path_to_java}/lib/commons-lang-2.5.jar;" \
                      f"{path_to_java}/lib/commons-codec-1.5.jar;" \
                      f"{path_to_java}/lib/javamail-1.4.4.jar;. " \
                      f"{class_to_run}"
            os.system(command)
            #print(command)



def run_all_class_file(path_to_java):
    print("Execution of the compiled files")
    for file in os.listdir(f"{path_to_java}/src/testcases/"):
        if file.endswith(".class"):
            class_to_run = f"testcases.{file[:-6]}"
            print(file)
            print(class_to_run)
            os.chdir(f"{path_to_java}/src")
            command = f"java -cp {path_to_java}/lib/servlet-api.jar;" \
                      f"{path_to_java}/lib/commons-lang-2.5.jar;" \
                      f"{path_to_java}/lib/commons-codec-1.5.jar;" \
                      f"{path_to_java}/lib/javamail-1.4.4.jar;. " \
                      f"{class_to_run}"
            os.system(command)
            #print(command)

def run_all_class_file_and_oracle(path_to_java):
    print("Execution of the compiled files")
    for file in os.listdir(f"{path_to_java}/src/testcases/"):
        if file.endswith(".class"):
            class_to_run = f"testcases.{file[:-6]}"
            print(file)
            print(class_to_run)
            os.chdir(f"{path_to_java}/src")
            command = f"java -cp {path_to_java}/lib/servlet-api.jar;" \
                      f"{path_to_java}/lib/commons-lang-2.5.jar;" \
                      f"{path_to_java}/lib/commons-codec-1.5.jar;" \
                      f"{path_to_java}/lib/javamail-1.4.4.jar;. " \
                      f"{class_to_run}"
            result_command = subprocess.check_output(command, shell=True)
            for x in result_command.decode('ascii').split('\n'):
                print(x)
            result_oracle = None
            for i, line in enumerate(result_command.decode('ascii').split('\n')):
                check_output_line = oracle.check_output(i, line)
                if check_output_line is not None:
                    #print(check_output_line)
                    result_oracle = check_output_line

            if result_oracle is not None :
                #print("ORACLE has detected a vulnerability")
                save_to_csv([file,result_oracle])
                print(file + " : " + result_oracle)
            else :
                save_to_csv([file,None])
                print(file + " : " + "Nothing")

def save_to_csv(line):
    import csv

    # open the file in the write mode
    with open('C:/Users/benjamin.petit/Documents/Seq2seq/OpenNMT_5CWE_diff6/results/run_pred_with_oracle.csv', 'a') as f:
        # create the csv writer
        writer = csv.writer(f)
        # write a row to the csv file
        writer.writerow(line)

if __name__ == "__main__":
    """
    # path_to_java = "C:/Users/benjamin.petit/Documents/Juliet_Test_Suite_11CWE_01java_only/Java"
    path_to_java = "C:/Users/benjamin.petit/Documents/Seq2seq/OpenNMT_5CWE_diff6/results/prediction_java_files"
    print(len(sys.argv))
    if len(sys.argv) > 1:
        print(sys.argv[1])
        print(sys.argv[2])
        compile_all_java_file(path_to_java, sys.argv[1], sys.argv[2])
        run_all_class_file(path_to_java, sys.argv[1], sys.argv[2])
    else:
        compile_all_java_file(path_to_java, False)
        #run_all_class_file(path_to_java)
        #run_all_class_file_and_oracle(path_to_java)
    """
    compile_all_my_java_files("C:\\Users\\benjamin.petit\\Documents\\Seq2seq\\OpenNMT_5CWE_B2Gonly\\results\\prediction_java_files\\src")
